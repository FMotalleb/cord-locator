apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-service
  labels:
    app: dns-service
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: dns-service
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: "600"
  template:
    metadata:
      labels:
        app: dns-service
        name: dns-service
    spec:
      containers:
        - name: dns-service
          image: fmotalleb/mockery:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
          resources:
            limits: &a1
              cpu: "0.1"
              ephemeral-storage: 0.1G
              memory: 0.1G
            requests: *a1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: data-02et4dw7
              mountPath: /root/
          env:
            - name: LOG_LEVEL
              value: info
            - name: CONFIG_FILE
              value: /root/config.yaml
            - name: WATCH_CONFIG_FILE
              value: "false"
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
            - name: LOG_FILE
              value: /dns.log
            - name: TZ
              value: Asia/Tehran
          command:
            - dns
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: data-02et4dw7
          secret:
            secretName: data-02et4dw7
---
kind: Secret
apiVersion: v1
metadata:
  name: data-02et4dw7
stringData:
  config.yaml: |
    global:
      address: ":53"
      allowTransfer:
        - "1.2.3.4"
        - "::1"
      defaultProvider: opendns

    providers:
      - name: cf
        ip:
          - 1.1.1.1:53
          - 1.0.0.1:53
      - name: google
        ip:
          - 8.8.8.8:53
          - 4.2.2.4:53
      - name: opendns
        ip:
          - 208.67.222.123:53
          - 208.67.220.123:53
      - name: shecan
        ip:
          - 178.22.122.100:53
          - 185.51.200.2:53
      - name: "403"
        ip:
          - 10.202.10.202:53
          - 10.202.10.102:53

    rules:
      - name: Ea blaze (Direct)
        matcher: regex
        matcherParams:
          - (.*\.)?blaze\.ea\.com
        resolver: opendns

      - name: Ea proxy
        matcher: regex
        matcherParams:
          - (.*\.)?ea\..*
          - (.*\.)?origin\..*
          - (.*\.)?tnt-ea\..*
        resolver: shecan

      - name: EasyAntiCheat proxy
        matcher: regex
        matcherParams:
          - (.*\.)?easyanticheat.net\..*
        resolver: shecan

      - name: golang proxy
        matcher: regex
        matcherParams:
          - (.*\.)?golang\..*
          - (.*\.)?go-mpulse.net
        resolver: shecan

      - name: GlobalConfigs proxy
        matcher: regex
        matcherParams:
          - (.*\.)?googleapis\..*
          - (.*\.)?googlehosted.com
        resolver: "shecan"
      - name: 403 fallback
        matcher: regex
        matcherParams:
          - (.*)?\.403
        resolver: "403"

      - name: Spotify proxy
        matcher: regex
        matcherParams:
          - (.*\.)?spotify\..*
          - (.*\.)?akamaihd\..*
          - (.*\.)?scdn\..*
          - (.*\.)?spotifycdn\..*
        resolver: shecan

      - name: Sentry proxy
        matcher: regex
        matcherParams:
          - (.*\.)?sentry\..*
        resolver: shecan

      - name: Flutter-Pub proxy
        matcher: regex
        matcherParams:
          - (.*\.)?flutter.*
          - (.*\.)?pub.dev.*
        resolver: "shecan"

      - name: DartLang proxy
        matcher: regex
        matcherParams:
          - (.*\.)?dartlang.*
        resolver: "shecan"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dns-service
  name: dns-service
spec:
  ports:
    - name: http
      protocol: TCP
      targetPort: http
      port: 80
    - name: m36l1v4q
      protocol: UDP
      targetPort: 53
      port: 53
  selector:
    app: dns-service
  type: ClusterIP
